-
  In order to test account transaction I create a new transaction
-
  !context
    uid: 'user_test1'
-
  !record {model: marketplace.announcement, id: announcement_test_0}:
    name: I'm offering services about Odoo Customization
    type: offer
    description: This include python development, formation, helpdesk, but not frontend development on Odoo CMS
    category_id: category_odoo
    tag_ids:
      - tag_odoo_python
      - tag_odoo_formation
      - tag_odoo_helpdesk
    partner_id: partner_test1
    infinite_qty: 1
    uom_id: product.product_uom_hour
    currency_ids:
      - model: "marketplace.announcement"
        field: "currency_ids"
        price_unit: 50
        currency_id: account_wallet.COM
-
  I check that nitially the announcement is in the "Draft" state
-
  !assert {model: marketplace.announcement, id: announcement_test_0}:
    - state == 'draft'
-
  I check that test2 can't publish it
-
  !context
    uid: 'user_test2'
-
  !python {model: marketplace.announcement}: |
    from openerp.osv import orm, osv
    from openerp import workflow
    try:
      workflow.trg_validate(uid, 'marketplace.announcement', ref('announcement_test_0'), 'announcement_draft_open', cr)
      assert False, "Test2 was able to publish the announcement!"
    except osv.except_osv:
      pass
-
  I check that test1 can publish it
-
  !context
    uid: 'user_test1'
-
  !python {model: marketplace.announcement}: |
    from openerp import workflow
    workflow.trg_validate(uid, 'marketplace.announcement', ref('announcement_test_0'), 'announcement_draft_open', cr)
-
  !assert {model: marketplace.announcement, id: announcement_test_0, string: "Test1 wasn't able to publish the announcement!"}:
    - state == 'open'
-
  I check that test2 can't close it
-
  !context
    uid: 'user_test2'
-
  !python {model: marketplace.announcement}: |
    from openerp.osv import orm, osv
    from openerp import workflow
    try:
      workflow.trg_validate(uid, 'marketplace.announcement', ref('announcement_test_0'), 'announcement_open_done', cr)
      assert False, "Test2 was able to close the announcement!"
    except osv.except_osv:
      pass
-
  I check that test1 can close it
-
  !context
    uid: 'user_test1'
-
  !python {model: marketplace.announcement}: |
    from openerp import workflow
    workflow.trg_validate(uid, 'marketplace.announcement', ref('announcement_test_0'), 'announcement_open_done', cr)
-
  !assert {model: marketplace.announcement, id: announcement_test_0, string: "Test1 wasn't able to close the announcement!"}:
    - state == 'done'
-
  I check that test1 can reopen it
-
  !python {model: marketplace.announcement}: |
    self.reset_workflow(cr, uid, [ref('announcement_test_0')])
-
  !assert {model: marketplace.announcement, id: announcement_test_0, string: "Test1 wasn't able to re-open the announcement!"}:
    - state == 'open'
-
  I create another announcement for testing the want type
-
  !record {model: marketplace.announcement, id: announcement_test_1}:
    name: Need help for a little change in Odoo frontend
    description: I need to make some HTML change in an home page
    category_id: category_odoo
    tag_ids:
      - tag_odoo_frontend
    partner_id: partner_test1
    quantity: 2
    type: want
    currency_ids:
      - model: "marketplace.announcement"
        field: "currency_ids"
        price_unit: 100
        currency_id: account_wallet.COM
-
  !assert {model: marketplace.announcement, id: announcement_test_1, string: "The announcement is not of want type!"}:
    - type == 'want'
-
  I check that test1 can publish it
-
  !python {model: marketplace.announcement}: |
    from openerp import workflow
    workflow.trg_validate(uid, 'marketplace.announcement', ref('announcement_test_1'), 'announcement_draft_open', cr)
-
  !assert {model: marketplace.announcement, id: announcement_test_1, string: "Test1 wasn't able to publish the announcement!"}:
    - state == 'open'
